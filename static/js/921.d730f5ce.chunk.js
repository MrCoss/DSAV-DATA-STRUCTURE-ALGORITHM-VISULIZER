"use strict";(self.webpackChunkdsa_visualizer=self.webpackChunkdsa_visualizer||[]).push([[921],{921:(e,t,n)=>{n.r(t),n.d(t,{default:()=>w});var s=n(2555),i=n(5043),r=n(6938),a=n(12),o=n(1861),l=n(1639);const c=(0,l.A)("CornerDownLeft",[["polyline",{points:"9 10 4 15 9 20",key:"r3jprv"}],["path",{d:"M20 4v7a4 4 0 0 1-4 4H4",key:"6o5b7l"}]]),d=(0,l.A)("CornerDownRight",[["polyline",{points:"15 10 20 15 15 20",key:"1q7qjw"}],["path",{d:"M4 4v7a4 4 0 0 0 4 4h12",key:"z08zvw"}]]);var h=n(9855),u=n(9292),p=n(9875),f=n(4537),g=n(2361),x=n(7432),v=n(7),m=n(5239),y=n(8364),j=n(579);const w=()=>{const[e,t]=(0,i.useState)([]),[n,l]=(0,i.useState)(""),[w,k]=(0,i.useState)(null),[N,b]=(0,i.useState)(""),A=(0,i.useRef)({}),[C,O]=(0,i.useState)({}),S=(0,i.useRef)(null),_=e=>{const t={insert:["void insert(Node* prev_node, int new_data) {","  Node* new_node = new Node();","  new_node->data = new_data;","  new_node->next = prev_node->next;","  prev_node->next = new_node;","}"],delete:["void deleteNode(Node** head_ref, int key) {","  // ... find node to delete ...","  // ... handle head case ...","  prev->next = temp->next;","  free(temp);","}"],search:["bool search(Node* head, int x) {","  Node* current = head;","  while (current != NULL) {","    if (current->data == x) return true;","    current = current->next;","  }","  return false;","}"]};return t[e]||t.insert},z={title:"Singly Linked List",script:_("insert"),highlightedLines:[],points:["A collection of nodes where each node points to the next.","Efficient insertions and deletions (<strong>O(1)</strong>) if the position is known.","Access and search time are linear (<strong>O(n)</strong>) as it requires traversal."],complexity:{time:{"Access/Search":"O(n)","Insert/Delete":"O(1)"},space:"O(n)"}},[L,I]=(0,i.useState)(z),D=e=>{b(e),setTimeout(()=>b(""),3e3)},R=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1500;k(e),setTimeout(()=>k(null),t)},H=(0,i.useCallback)(()=>{const e={};if(S.current){const t=S.current.getBoundingClientRect();Object.entries(A.current).forEach(n=>{let[s,i]=n;if(i){const n=i.getBoundingClientRect();e[s]={x:n.left-t.left+n.width/2,y:n.top-t.top+n.height/2}}}),O(e)}},[]);(0,i.useEffect)(()=>{H()},[e,H]),(0,i.useEffect)(()=>{const e=new ResizeObserver(H),t=S.current;return t&&e.observe(t),()=>{t&&e.unobserve(t)}},[H]);const T=s=>{b("");const i=parseInt(n);if(isNaN(i))return void D("Please enter a valid number.");if(e.some(e=>e.value===i))return void D("Value ".concat(i," already exists in the list."));const r=(e=>({value:e,id:crypto.randomUUID()}))(i);let a;a="head"===s?[r,...e]:[...e,r],t(a),R(r.id),I({title:"Insert ".concat("head"===s?"Head":"Tail"),script:_("insert"),highlightedLines:[3,4],points:["Inserting value <strong>".concat(i,"</strong> at the ").concat(s,"."),"Update pointers to link the new node."],complexity:{time:{Operation:"O(1)"},space:"O(1)"}}),l("")};return(0,j.jsxs)("div",{className:"grid grid-cols-1 xl:grid-cols-2 gap-8 items-start",children:[(0,j.jsxs)("div",{className:"relative",children:[(0,j.jsx)(r.N,{children:N&&(0,j.jsxs)(a.P.div,{className:"absolute -top-14 left-1/2 -translate-x-1/2 w-full max-w-md bg-error text-white p-3 rounded-lg shadow-lg flex items-center gap-3",initial:{opacity:0,y:-20,scale:.9},animate:{opacity:1,y:0,scale:1},exit:{opacity:0,y:-20,scale:.9},children:[(0,j.jsx)(o.A,{}),(0,j.jsx)("span",{children:N})]})}),(0,j.jsxs)("div",{ref:S,className:"bg-surface/60 p-4 rounded-xl min-h-[20rem] border border-secondary shadow-xl flex justify-center items-center",children:[(0,j.jsx)("div",{className:"flex flex-wrap justify-center items-center gap-8",children:(0,j.jsx)(r.N,{children:e.map(e=>(0,j.jsx)(a.P.div,{ref:t=>A.current[e.id]=t,layout:!0,initial:{opacity:0,scale:.5},animate:{opacity:1,scale:1},exit:{opacity:0,scale:.5,transition:{duration:.5}},transition:{type:"spring",stiffness:300,damping:20},children:(0,j.jsx)(v.A,{isHighlighted:e.id===w,children:e.value})},e.id))})}),(0,j.jsxs)("svg",{className:"absolute w-full h-full top-0 left-0 -z-10 pointer-events-none",children:[(0,j.jsxs)("defs",{children:[(0,j.jsxs)("linearGradient",{id:"arrow-gradient",x1:"0%",y1:"0%",x2:"100%",y2:"0%",children:[(0,j.jsx)("stop",{offset:"0%",stopColor:"#e94560"}),(0,j.jsx)("stop",{offset:"100%",stopColor:"#53a9ff"})]}),(0,j.jsx)("marker",{id:"arrowhead",markerWidth:"10",markerHeight:"7",refX:"9",refY:"3.5",orient:"auto",children:(0,j.jsx)("polygon",{points:"0 0, 10 3.5, 0 7",fill:"url(#arrow-gradient)"})})]}),(0,j.jsx)(r.N,{children:e.length>1&&e.slice(0,-1).map((t,n)=>{const s=t,i=e[n+1],r=C[s.id],a=C[i.id];return r&&a?(0,j.jsx)(y.A,{from:r,to:a},"arrow-".concat(s.id)):null})})]})]}),(0,j.jsxs)(f.A,{children:[(0,j.jsx)(x.A,{value:n,onChange:e=>l(e.target.value),placeholder:"Value",type:"number"}),(0,j.jsxs)(g.A,{onClick:()=>T("head"),children:[(0,j.jsx)(c,{size:18})," Insert Head"]}),(0,j.jsxs)(g.A,{onClick:()=>T("tail"),children:[(0,j.jsx)(d,{size:18})," Insert Tail"]}),(0,j.jsxs)(g.A,{onClick:()=>{b("");const s=parseInt(n);if(isNaN(s))return void D("Please enter a valid number.");const i=e.find(e=>e.value===s);i?(R(i.id),I({title:"Delete",script:_("delete"),highlightedLines:[3,4],points:["Deleting node with value <strong>".concat(s,"</strong>."),"Update pointers of the previous node."],complexity:{time:{"Worst Case":"O(n)"},space:"O(1)"}}),setTimeout(()=>{t(e.filter(e=>e.id!==i.id))},500),l("")):D("Value ".concat(s," not found in the list."))},className:"bg-red-600 hover:bg-red-700 focus:ring-red-500",children:[(0,j.jsx)(h.A,{size:18})," Delete"]}),(0,j.jsxs)(g.A,{onClick:()=>{b("");const t=parseInt(n);if(isNaN(t))return void D("Please enter a valid number.");const s=e.find(e=>e.value===t);s?(R(s.id),I({title:"Search: Found",script:_("search"),highlightedLines:[3],points:["Searching for value <strong>".concat(t,"</strong>."),"Found node with value <strong>".concat(t,"</strong>.")],complexity:{time:{"Worst Case":"O(n)"},space:"O(1)"}})):(D("Value ".concat(t," not found in the list.")),I({title:"Search: Not Found",script:_("search"),highlightedLines:[6],points:["Searching for value <strong>".concat(t,"</strong>."),"Reached the end of the list, value not found."],complexity:{time:{"Worst Case":"O(n)"},space:"O(1)"}})),l("")},className:"bg-purple-600 hover:bg-purple-700 focus:ring-purple-500",children:[(0,j.jsx)(u.A,{size:18})," Search"]}),(0,j.jsxs)(g.A,{onClick:()=>{b(""),t([]),I(z)},className:"bg-gray-600 hover:bg-gray-700 focus:ring-gray-500",children:[(0,j.jsx)(p.A,{size:18})," Clear"]})]})]}),(0,i.createElement)(m.A,(0,s.A)((0,s.A)({},L),{},{key:L.title+L.points[0]}))]})}},9855:(e,t,n)=>{n.d(t,{A:()=>s});const s=(0,n(1639).A)("Trash2",[["path",{d:"M3 6h18",key:"d0wm0j"}],["path",{d:"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6",key:"4alrt4"}],["path",{d:"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2",key:"v07s0e"}],["line",{x1:"10",x2:"10",y1:"11",y2:"17",key:"1uufr5"}],["line",{x1:"14",x2:"14",y1:"11",y2:"17",key:"xtxkd"}]])}}]);
//# sourceMappingURL=921.d730f5ce.chunk.js.map